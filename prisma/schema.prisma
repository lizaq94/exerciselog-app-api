// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  username     String    @unique
  email        String    @unique
  password     String
  refreshToken String?
  workouts     Workout[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Workout {
  id        String     @id @default(uuid())
  name      String
  date      DateTime   @default(now())
  notes     String?
  duration  Float
  exercises Exercise[]
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Exercise {
  id        String   @id @default(uuid())
  workout   Workout? @relation(fields: [workoutId], references: [id], onDelete: Cascade)
  workoutId String?
  name      String
  order     Int
  type      String
  notes     String?
  sets      Set[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  image     Upload?
}

model Set {
  id          String    @id @default(uuid())
  exercise    Exercise? @relation(fields: [exerciseId], references: [id], onDelete: Cascade)
  exerciseId  String?
  repetitions Int
  weight      Float
  order       Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Upload {
  id         String   @id @default(uuid())
  name       String   @db.VarChar(1024)
  path       String   @db.VarChar(1024)
  type       FileType @default(IMAGE)
  mime       String   @db.VarChar(128)
  size       Int
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId String   @unique
  createDate DateTime @default(now())
  updateDate DateTime @updatedAt
}

enum FileType {
  IMAGE @map("image")
}
